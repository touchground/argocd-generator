name: 'Generate ArgoCD Application'
description: 'Generates an ArgoCD application YAML file'
inputs:
  appName:
    description: 'Application name'
    required: true
  repoUrl:
    description: 'Repository URL'
    required: true
  manifestsPath:
    description: 'Path to Kubernetes manifests in the repository'
    required: true
  namespace:
    description: 'Destination namespace'
    required: true
  syncPolicy:
    description: 'Sync policy'
    required: false
    default: 'automated'
  outputPath:
    description: 'Path to save the generated YAML file'
    required: false
    default: '.'
runs:
  using: 'composite'
  steps:
    # - name: Install ArgoCD CLI
    #   uses: touchground/devops-tools@release
    #   with:
    #     argocd: '2.10.4'

    # - name: Generate ArgoCD Application
    #   run: |
    #     argocd app create ${{ inputs.appName }} \
    #       --repo ${{ inputs.repoUrl }} \
    #       --path ${{ inputs.manifestsPath }} \
    #       --dest-server https://kubernetes.default.svc \
    #       --dest-namespace ${{ inputs.namespace }} \
    #       --project default \
    #       --sync-policy ${{ inputs.syncPolicy }} \
    #       --upsert \
    #       --dry-run > ${{ inputs.outputPath }}/${{ inputs.appName }}.yaml
    #   shell: bash

    - name: Generate ArgoCD Application
      run: |
        template='
        apiVersion: argoproj.io/v1alpha1
        kind: Application
        metadata:
          name: ${{ inputs.appName }}
          namespace: argocd
          finalizers:
          - resources-finalizer.argocd.argoproj.io
        spec:
          project: default
          source:
            repoURL: {{ .Values.spec.source.repoURL }}
            targetRevision: {{ .Values.spec.source.targetRevision }}
            path: ${{ inputs.manifestsPath }}
          destination:
            server: {{ .Values.spec.destination.server }}
            namespace: ${{ inputs.namespace }}
          syncPolicy:
            automated: {}
        '
        echo "${template}" > ${{ inputs.outputPath }}/${{ inputs.appName }}.yaml
      shell: bash